@page "/admin/manage-quizes"

@inject IQuizApi QuizApi
@inject ICategoryApi CategoryApi

@using BlazingQuiz.Shared.Components.Components

<div class="container">
    <h1>Manage Quizes</h1>
    <hr />

    <div class="row">
        <div class="col-sm-3 ms-auto" >
            <label class="form-label">Select Category</label>
            <select class="form-control" @bind="_selectedCategory" @bind:after="OnSelectedCategoryChanged">
                <option value="0">Select Category</option>
                @foreach(var c in _categories)
                {
                    <option value="@c.Id">@c.Name</option>
                }
            </select>
        </div>
    </div>
    <div class="row">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Category</th>
                    <th>Number Of Questions</th>
                    <th>Time In Minutes</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if(_filteredQuizzes.Length == 0)
                {
                    <tr>
                        <td colspan="5">
                            <p class="text-danger">No Quizes Found</p>
                        </td>
                    </tr>
                }
                else
                {
                    foreach(var q in _filteredQuizzes)
                    {
                        <tr>
                            <td>@q.Name </td>
                            <td>@q.CategoryName </td>
                            <td>@q.TotalQuestion questions</td>
                            <td>@q.TimeInMinutes minutes</td>
                            <td>
                                <div class="d-flex justify-content-around">
                                    <button type="button" class="btn btn-sm btn-info" @onclick="() => ViewQuestionsAsync(q)">View Questions</button>
                                    <a href="admin/edit-quiz/@q.Id" class="btn btn-sm btn-primary">Edit</a>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@if(_showQuestionsModal)
{
    <Modal 
    Title="Questions" Size="ModalSize.Large"
    ActionButtonText="Ok" 
    OnActionButtonClick="() => _showQuestionsModal = false" 
    OnCancelClick="() =>  _showQuestionsModal = false"       >

        @foreach (var q in _viewingQuestions)
        {
            <div class="mb-2 shadow p-2 border border-start border-success">
                @q.Text
            </div>

        }


    </Modal>
}


@code {
    private QuizListDto[] _quizzes = [];
    private QuizListDto[] _filteredQuizzes = [];

    private CategoryDto[] _categories = [];
    private int _selectedCategory;


    private QuestionDto[] _viewingQuestions = [];
    private bool _showQuestionsModal;


    protected async override Task OnInitializedAsync()
    {
        var quizesTask = QuizApi.GetQuizesAsync();
        _categories = await CategoryApi.GetCategoriesAsync();
        _quizzes = await quizesTask;
        _filteredQuizzes = _quizzes;
    }
    private void OnSelectedCategoryChanged()
    {
        if(_selectedCategory == 0 )
        {
            _filteredQuizzes = _quizzes;

        }
        else
        {
            _filteredQuizzes = _quizzes.Where(q => q.CategoryId == _selectedCategory).ToArray();

        }
    }

    private async Task ViewQuestionsAsync(QuizListDto q) 
    {
        _viewingQuestions = await QuizApi.GetQuizQuestionsAsync(q.Id);

        _showQuestionsModal = true;
    }


}
