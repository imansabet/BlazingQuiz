@page "/admin/manage-categories"
@inject ICategoryApi CategoryApi

<div class="container">
    <h1>Manage Categories</h1>
    <hr />
    <div class="row">
        <div class="col-sm-6">
            <EditForm Model="_category" OnValidSubmit="SaveCategoryAsync">
                <DataAnnotationsValidator />
                <div class="card">
                    <div class="card-header">
                        <h4 class="m-0">Add | Edit Category</h4>
                        <div class="card-body">
                            <div class="mb-3">
                                <label class="form-label">
                                    Category Name
                                </label>
                                <InputText class="form-control form-control-sm"
                                @bind-Value="_category.Name " />
                                <ValidationMessage For="() => _category.Name" />
                            </div>
                            @if(_errorMessage != null)
                            {
                                <div class="mb-3 border border-danger border-1 d-flex justify-content-between gap-2 p-4 align-items-start">
                                    <p class="m-0 p-1">@_errorMessage</p>
                                    <button type="button" class="btn btn-sm btn-danger" @onclick="() => _errorMessage = null">X</button>
                                </div>

                            }

                        </div>
                        <div class="card-footer  d-flex justify-content-between align-items-center">
                            @if(!_isBusy)
                            {
                                <button type="button" class="btn btn-sm btn-danger" @onclick="() => _category = new()">Cancel</button>
                                <button type="submit" class="btn btn-sm btn-success">Save Category</button>
                            }
                            else{
                                <button type="button" disabled class="btn btn-sm btn-secondary">Cancel</button>
                                <button type="button" disabled class="btn btn-sm btn-secondary">Saving Category . . . </button>
                            }
                        </div>
                    </div>
                </div>

            </EditForm>
        </div>
        <div class="col-sm-6 ms-auto ">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Id</th>
                        <th>Name</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if(_categories.Length == 0)
                    {
                        <tr>
                            <td colspan="4">
                                <p class="text-danger">No Categories Found.</p>
                            </td>
                        </tr>
                    }else
                    {
                        int number = 1;
                        @foreach(var category in _categories)
                        {
                            <tr>
                                <td>@(number++)</td>
                                <td>@category.Id</td>
                                <td>@category.Name</td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-primary" @onclick="() => OnEditCategory(category)">Edit</button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>

            </table>
        </div>
    </div>
</div>


@code {
    private CategoryDto[] _categories = [];
    private CategoryDto _category = new();
    private bool _isBusy;
    private string? _errorMessage;

    protected override async Task OnInitializedAsync() =>  await LoadCategoriesAsync();


    private async Task LoadCategoriesAsync()
    {
        _categories = await CategoryApi.GetCategoriesAsync();
    }

    private void OnEditCategory(CategoryDto categoryDto )
    {
        _category = categoryDto;
    }
    private async Task SaveCategoryAsync()
    {
        try 
        {
            _isBusy = true;
            var response = await CategoryApi.SaveCategoryAsync(_category);
            if (!response.IsSuccess) 
            {
                _errorMessage = response.ErrorMessage ??  "An Unknown Error Occurred While Saving the Category.";
                return;
            }
            // Reset the Form and Reload Categories
            _category = new();
            await LoadCategoriesAsync();
        }
        catch (Exception ex) 
        {
            _errorMessage = ex.Message;
        }
        finally
        {

            _isBusy = false;
        }

    }
}
